version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ai-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-joyful}
      MYSQL_USER: ${MYSQL_USER:-joyful}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-123456}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 后端API服务
  backend:
    build: .
    container_name: ai-backend
    environment:
      # 数据库配置
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-joyful}
      - MYSQL_USER=${MYSQL_USER:-joyful}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-123456}
      
      # API配置
      - API_HOST=0.0.0.0
      - API_PORT=${API_PORT:-81}
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # API密钥
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      
      # JWT配置
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - JWT_EXPIRES_DAYS=${JWT_EXPIRES_DAYS:-30}
    ports:
      - "${API_PORT:-81}:${API_PORT:-81}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build: ../web
    container_name: ai-frontend
    environment:
      - BACKEND_API_URL=http://backend:81/api
      - FRONTEND_PORT=80
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ai-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 